import pyowm
from pyowm.utils.config import get_default_config
import keyboards as kb
import telebot, bs4, requests


# TOKEN
bot = telebot.TeleBot('1791715945:AAHF0exJ-9gTdfhv5PXziJVugzQN3I1w0eI')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, ' + message.from_user.first_name)
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEBD5ZgYEMNgIdeeJb4_7IzqITscTWNOwAC0CsAAulVBRi_MsxcZV5XCh4E')
    bot.send_message(message.chat.id, '–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?', reply_markup = kb.greetkeyboard())
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEBD5lgYEMPhQrPoYSg17wmU2cPEy1yowAC-isAAulVBRgEi75kjBko2h4E')


@bot.message_handler(content_types= ['text'])
def greeting(message):
    if message.text == '‚òÄ–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É':
        setlocation(message)
    elif message.text == 'üì±–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
        getMeassage(message)
    elif message.text == 'üàπ–°–∏–º–≤–æ–ª—ã':
        magictext(message)
    elif message.text == 'ü§£–ê–Ω–µ–∫–¥–æ—Ç':
        bot.send_message(message.chat.id, '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ‚ùó –ö—Ä–∏–Ω–∂ ‚ùó‚ùó‚ùó')
        bot.send_message(message.from_user.id, getanekdot(), kb.greetkeyboard())


def getanekdot():
    z=''
    s=requests.get('http://anekdotme.ru/random')
    b=bs4.BeautifulSoup(s.text, "html.parser")
    p=b.select('.anekdot_text')
    for x in p:
        s=(x.getText().strip())
        z=z+s+'\n\n'
    return s

# –ü–æ–≥–æ–¥–∞
url = 'http://api.openweathermap.org/data/2.5/weather'
api_weather = '489f45987eb92460dc4955babb3bbeec'
api_telegram = '1791715945:AAHF0exJ-9gTdfhv5PXziJVugzQN3I1w0eI'
@bot.message_handler(commands=['weather'])
def setlocation(message):
    location = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –≥–æ—Ä–æ–¥:')
    bot.register_next_step_handler(location, outWeatherInfo)

def outWeatherInfo(message):
    city_name = message.text

    try:
        params = {'APPID': api_weather, 'q': city_name, 'units': 'metric', 'lang': 'ru'}
        result = requests.get(url, params=params)
        weather = result.json()

        if weather["main"]['temp'] < -20:
            status = "ü•∂–ù–∞ —É–ª–∏—Ü–µ –¥—É–±—ç–æ! –•–æ–ª–æ–¥—ç–æ!"
        elif weather["main"]['temp'] < -10:
            status = "ü•∂–î—É–º–∞—é, –ª—É—á—à–µ –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞!"
        elif weather["main"]['temp'] < 0:
            status = "üò®–ü–æ—Ä–∞ –º–µ–Ω—è—Ç—å —Ä–µ–∑–∏–Ω—É!"
        elif weather["main"]['temp'] < 10:
            status = "üòè–°–µ–π—á–∞—Å —Ö–æ–ª–æ–¥–Ω–æ–≤–∞—Ç–æ!"
        elif weather["main"]['temp'] < 20:
            status = "üî•–°–µ–π—á–∞—Å —Ç–µ–ø–ª–æ!"
        elif weather["main"]['temp'] > 25:
            status = "üî•–°–µ–π—á–∞—Å –∂–∞—Ä–∫–æ!"
        else:
            status = "üî•–°–µ–π—á–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"

        bot.send_message(message.chat.id, "üå°–í –≥–æ—Ä–æ–¥–µ " + str(weather["name"]) + " —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(
            float(weather["main"]['temp'])) + " ¬∞C\n" +
                         "üìà–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_max'])) + " ¬∞C\n" +
                         "üìâ–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_min'])) + " ¬∞C\n" +
                         "üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ " + str(float(weather['wind']['speed'])) + " –º/—Å\n" +
                         "üÖøÔ∏è–î–∞–≤–ª–µ–Ω–∏–µ " + str(float(weather['main']['pressure'])) + " –º–±–∞—Ä\n" +
                         "üí¶–í–ª–∞–∂–Ω–æ—Å—Ç—å " + str(int(weather['main']['humidity'])) + " %\n" +
                         "üëÄ–í–∏–¥–∏–º–æ—Å—Ç—å " + str(weather['visibility']) + "\n" +
                         "üìú–û–ø–∏—Å–∞–Ω–∏–µ: " + str(weather['weather'][0]["description"]) + "\n\n" + status, kb.greetkeyboard())

    except:
        bot.send_message(message.chat.id, "–ì–æ—Ä–æ–¥ " + city_name + " –Ω–µ –Ω–∞–π–¥–µ–Ω", kb.greetkeyboard())

# –ü–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤ –≤ —Å–∏–º–≤–æ–ª—ã
alphabet =      {'–ê' : 0, '–ë' : 1, '–í' : 2, '–ì' : 3, '–î' : 4, '–ï' : 5, '–ñ' : 6, '–ó' : 7, '–ò' : 8, '–ö' : 9,
                 '–õ' : 10, '–ú' : 11, '–ù' : 12, '–û' : 13, '–ü' : 14, '–†' : 15, '–°' : 16, '–¢' : 17, '–£' : 18, '–§' : 19,
                 '–•' : 20, '–¶' : 21, '–ß' : 22, '–®' : 23, '–©' : 24, '–™' : 25, '–´' : 26, '–¨' : 27, '–≠' : 28, '–Æ' : 29,
                 '–Ø' : 30}

# –í–≤–æ–¥–∏–º —Å–ª–æ–≤–æ
@bot.message_handler(commands=['magictext'])
def magictext(message):
    getWord = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ: ")
    bot.register_next_step_handler(getWord, outputWord)

# –í—ã–≤–æ–¥–∏–º —Å–ª–æ–≤–æ
def outputWord(message):
    onemsg = []
    word = message.text
    alphabet_sym = open('Alphabet3.txt')
    f = alphabet_sym.read()
    list = f.split(',\n')
    for i in range(len(word)):
         if word[i].isalpha():
             if word[i].upper() == '–ô':
                 index = alphabet.get('–ò')
             elif word[i].upper() == '–Å':
                 index = alphabet.get('–ï')
             else:
                index = alphabet.get(word[i].upper())
             onemsg.append(list[index])
         else:
            bot.send_message(message.chat.id, '\n'.join(onemsg), parse_mode='MarkdownV2')
            onemsg.clear()
    bot.send_message(message.chat.id, '\n'.join(onemsg), kb.greetkeyboard(), parse_mode='MarkdownV2')


# –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
# –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
value = ''
old_value = ''

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –≤—ã–∑–æ–≤–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
@bot.message_handler(commands=['calculator'])
def getMeassage(message):
    global value
    if value == '':
       bot.send_message(message.from_user.id, '0', reply_markup=kb.calckeyboard())
    else:
        bot.send_message(message.from_user.id, value, reply_markup=kb.calckeyboard())
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
@bot.callback_query_handler(func=lambda call: True)
def callback_func(query):
    global value, old_value
    data = query.data
    if data == 'C':
        value = ''
    elif data == '<=':
        if value != '':
            value = value[:len(value)-1]
    elif data == '=':
        try:
            value = str( eval(value) )
        except:
            value = '–û—à–∏–±–∫–∞!'
    else:
        value += data
    if (value != old_value and value != '') or ('0' != old_value and value == ''):
        if value == '':
            bot.edit_message_text(chat_id=query.message.chat.id, message_id=query.message.message_id, text='0', reply_markup=kb.calckeyboard())
            old_value = '0'
        else:
            bot.edit_message_text(chat_id=query.message.chat.id, message_id=query.message.message_id, text=value, reply_markup=kb.calckeyboard())
            old_value = value
    if value == '–û—à–∏–±–∫–∞!':
        value = ''


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
#bot.polling(none_stop=True, interval=0)
if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as ex:
            telebot.logger.error(ex)